#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.1 (swiftlang-1100.0.270.13 clang-1100.0.33.7)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="THEOplayerSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif




SWIFT_CLASS("_TtC13THEOplayerSDK24AgamaPlayerConfiguration")
@interface AgamaPlayerConfiguration : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull config SWIFT_DEPRECATED_OBJC("Swift property 'AgamaPlayerConfiguration.config' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nonnull application SWIFT_DEPRECATED_OBJC("Swift property 'AgamaPlayerConfiguration.application' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nonnull applicationVersion SWIFT_DEPRECATED_OBJC("Swift property 'AgamaPlayerConfiguration.applicationVersion' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nullable userAccountID SWIFT_DEPRECATED_OBJC("Swift property 'AgamaPlayerConfiguration.userAccountID' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Configure Agama analytics pre-integration
SWIFT_CLASS("_TtC13THEOplayerSDK24AgamaSourceConfiguration")
@interface AgamaSourceConfiguration : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull asset SWIFT_DEPRECATED_OBJC("Swift property 'AgamaSourceConfiguration.asset' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nullable cdn SWIFT_DEPRECATED_OBJC("Swift property 'AgamaSourceConfiguration.cdn' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nullable contentTitle SWIFT_DEPRECATED_OBJC("Swift property 'AgamaSourceConfiguration.contentTitle' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nullable contentType SWIFT_DEPRECATED_OBJC("Swift property 'AgamaSourceConfiguration.contentType' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nullable contentDescription SWIFT_DEPRECATED_OBJC("Swift property 'AgamaSourceConfiguration.contentDescription' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




/// A MetadataDescription consists of:
SWIFT_CLASS("_TtC13THEOplayerSDK19MetadataDescription")
@interface MetadataDescription : NSObject
/// A dictionary of metadata
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable metadataKeys SWIFT_DEPRECATED_OBJC("Swift property 'MetadataDescription.metadataKeys' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// The title of the content
@property (nonatomic, copy) NSString * _Nullable title SWIFT_DEPRECATED_OBJC("Swift property 'MetadataDescription.title' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Constructs a MetadataDescription
- (nonnull instancetype)initWithMetadataKeys:(NSDictionary<NSString *, id> * _Nullable)metadataKeys title:(NSString * _Nullable)title OBJC_DESIGNATED_INITIALIZER SWIFT_DEPRECATED_OBJC("Swift initializer 'MetadataDescription.init(metadataKeys:title:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class ChromecastMetadataImage;

/// A ChromecastMetadataDescription consists of:
SWIFT_CLASS("_TtC13THEOplayerSDK29ChromecastMetadataDescription")
@interface ChromecastMetadataDescription : MetadataDescription
/// The images property can either be an array of strings representing the image urls, or an array of ChromecastMetadataImages.
@property (nonatomic, copy) NSArray<ChromecastMetadataImage *> * _Nullable images SWIFT_DEPRECATED_OBJC("Swift property 'ChromecastMetadataDescription.images' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// The release date using the following string format: “YYYY-MM-DD”, e.g. “2017-03-14”
@property (nonatomic, copy) NSString * _Nullable releaseDate SWIFT_DEPRECATED_OBJC("Swift property 'ChromecastMetadataDescription.releaseDate' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// The subtitle / short explanation about the content
@property (nonatomic, copy) NSString * _Nullable subtitle SWIFT_DEPRECATED_OBJC("Swift property 'ChromecastMetadataDescription.subtitle' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)initWithMetadataKeys:(NSDictionary<NSString *, id> * _Nullable)metadataKeys title:(NSString * _Nullable)title SWIFT_UNAVAILABLE;
@end


/// A ChromecastMetaDataImage consists of:
SWIFT_CLASS("_TtC13THEOplayerSDK23ChromecastMetadataImage")
@interface ChromecastMetadataImage : NSObject
/// The URL to the metadata image
@property (nonatomic, copy) NSString * _Nonnull src SWIFT_DEPRECATED_OBJC("Swift property 'ChromecastMetadataImage.src' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// The width of the image
@property (nonatomic) NSInteger width SWIFT_DEPRECATED_OBJC("Swift property 'ChromecastMetadataImage.width' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// The height of the image
@property (nonatomic) NSInteger height SWIFT_DEPRECATED_OBJC("Swift property 'ChromecastMetadataImage.height' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Constructs a ChromecastMetadataImage
- (nonnull instancetype)initWithSrc:(NSString * _Nonnull)src width:(NSInteger)width height:(NSInteger)height OBJC_DESIGNATED_INITIALIZER SWIFT_DEPRECATED_OBJC("Swift initializer 'ChromecastMetadataImage.init(src:width:height:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class ConvivaContentMetadata;

SWIFT_CLASS("_TtC13THEOplayerSDK20ConvivaConfiguration")
@interface ConvivaConfiguration : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull customerKey SWIFT_DEPRECATED_OBJC("Swift property 'ConvivaConfiguration.customerKey' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nullable gatewayUrl SWIFT_DEPRECATED_OBJC("Swift property 'ConvivaConfiguration.gatewayUrl' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, strong) ConvivaContentMetadata * _Nonnull contentMetadata SWIFT_DEPRECATED_OBJC("Swift property 'ConvivaConfiguration.contentMetadata' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13THEOplayerSDK22ConvivaContentMetadata")
@interface ConvivaContentMetadata : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull assetName SWIFT_DEPRECATED_OBJC("Swift property 'ConvivaContentMetadata.assetName' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nullable defaultResource SWIFT_DEPRECATED_OBJC("Swift property 'ConvivaContentMetadata.defaultResource' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nullable applicationName SWIFT_DEPRECATED_OBJC("Swift property 'ConvivaContentMetadata.applicationName' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nullable viewerId SWIFT_DEPRECATED_OBJC("Swift property 'ConvivaContentMetadata.viewerId' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable custom SWIFT_DEPRECATED_OBJC("Swift property 'ConvivaContentMetadata.custom' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Represents an <code>EventDispatcher</code> which will be responsible for dispatching an event, once it occurs.
SWIFT_CLASS("_TtC13THEOplayerSDK15EventDispatcher")
@interface EventDispatcher : NSObject
- (NSString * _Nonnull)getMinimizeFunction SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'EventDispatcher.getMinimizeFunction()' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




/// Key system configuration
SWIFT_CLASS("_TtC13THEOplayerSDK22KeySystemConfiguration")
@interface KeySystemConfiguration : NSObject
/// Specifies the URL of the licensing server.
@property (nonatomic, copy) NSURL * _Nullable licenseAcquisitionURL SWIFT_DEPRECATED_OBJC("Swift property 'KeySystemConfiguration.licenseAcquisitionURL' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Specifies the URL of the FairPlay certificate server.
@property (nonatomic, copy) NSURL * _Nullable certificateURL SWIFT_DEPRECATED_OBJC("Swift property 'KeySystemConfiguration.certificateURL' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// Configure Moat analytics pre-integration
SWIFT_CLASS("_TtC13THEOplayerSDK11MoatOptions")
@interface MoatOptions : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Constructs a MoatOptions object
/// \param partnerCode the Moat partnerCode
///
/// \param locationServicesEnabled If ‘true’ then the SDK will attempt to use the device’s location services for more precise location data. Default = true
///
/// \param IDFACollectionEnabled If ‘true’ then the SDK will attempt to use the device’s IDFA for more precise user info. Default = true
///
/// \param debugLoggingEnabled If ‘true’ and a ‘MOAT_LOGGING’ environment variable is set in Xcode, then the SDK will log information to assist in the implementation and testing process. Default = false
///
- (nonnull instancetype)initWithPartnerCode:(NSString * _Nonnull)partnerCode locationServicesEnabled:(BOOL)locationServicesEnabled IDFACollectionEnabled:(BOOL)IDFACollectionEnabled debugLoggingEnabled:(BOOL)debugLoggingEnabled;
@end



@class SourceDescription;

/// Related Content Source object
SWIFT_CLASS("_TtC13THEOplayerSDK20RelatedContentSource")
@interface RelatedContentSource : NSObject
/// The duration property can be used to display a duration on the tile of the related content video.
@property (nonatomic, readonly, copy) NSString * _Nullable duration SWIFT_DEPRECATED_OBJC("Swift property 'RelatedContentSource.duration' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// The image property can be used to set the background image on the tile of the related content video.
@property (nonatomic, readonly, copy) NSString * _Nonnull image SWIFT_DEPRECATED_OBJC("Swift property 'RelatedContentSource.image' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// The link property can be used to specify a target URL to navigate to, when clicking the tile of the related content video. Specifying a link will redirect to a new page.
@property (nonatomic, readonly, copy) NSString * _Nullable link SWIFT_DEPRECATED_OBJC("Swift property 'RelatedContentSource.link' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// A source object specifying the source to play. Specifying a source will reset the player’s SourceDescription and allow the same player to play the new source without the need to redirect to a new page.
@property (nonatomic, readonly, strong) SourceDescription * _Nullable source SWIFT_DEPRECATED_OBJC("Swift property 'RelatedContentSource.source' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// The title property can be used to display a title on the tile of the related content video.
@property (nonatomic, readonly, copy) NSString * _Nullable title SWIFT_DEPRECATED_OBJC("Swift property 'RelatedContentSource.title' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Constructs a RelatedContentSource with link
/// \param image The image property can be used to set the background image on the tile of the related content video.
///
/// \param link The link property can be used to specify a target URL to navigate to, when clicking the tile of the related content video. Specifying a link will redirect to a new page.
///
/// \param duration The duration property can be used to display a duration on the tile of the related content video.
///
/// \param title The title property can be used to display a title on the tile of the related content video.
///
- (nonnull instancetype)initWithImage:(NSString * _Nonnull)image link:(NSString * _Nonnull)link duration:(NSString * _Nullable)duration title:(NSString * _Nullable)title;
/// Constructs a RelatedContentSource with SourceDescription
/// \param image The image property can be used to set the background image on the tile of the related content video.
///
/// \param source A source object specifying the source to play. Specifying a source will reset the player’s SourceDescription and allow the same player to play the new source without the need to redirect to a new page.
///
/// \param duration The duration property can be used to display a duration on the tile of the related content video.
///
/// \param title The title property can be used to display a title on the tile of the related content video.
///
- (nonnull instancetype)initWithImage:(NSString * _Nonnull)image source:(SourceDescription * _Nonnull)source duration:(NSString * _Nullable)duration title:(NSString * _Nullable)title;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class TypedSource;
@class TextTrackDescription;

/// The <code>SourceDescription</code> object is used to describe a configuration of a source for a THEOplayer instance.
SWIFT_CLASS("_TtC13THEOplayerSDK17SourceDescription")
@interface SourceDescription : NSObject
/// Represents the source of the media to be played.
@property (nonatomic, copy) NSArray<TypedSource *> * _Nonnull sources SWIFT_DEPRECATED_OBJC("Swift property 'SourceDescription.sources' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// The textTracks property can be used to add an array of side-loaded text tracks to the player. All valid tracks will be available for playback as long as the player’s source is not set again. Each text track should be described as a TextTrackDescription.
@property (nonatomic, copy) NSArray<TextTrackDescription *> * _Nullable textTracks SWIFT_DEPRECATED_OBJC("Swift property 'SourceDescription.textTracks' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// The poster property can be used to specify a content poster per source. The player’s content poster will be updated as soon as a new source with valid poster is set, or when the player’s own poster property is altered.
@property (nonatomic, copy) NSURL * _Nullable poster SWIFT_DEPRECATED_OBJC("Swift property 'SourceDescription.poster' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Metadata that can be used to describe content, e.g. when casting to chromecast.
@property (nonatomic, strong) MetadataDescription * _Nullable metadata SWIFT_DEPRECATED_OBJC("Swift property 'SourceDescription.metadata' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@class VRConfiguration;

SWIFT_AVAILABILITY(ios,introduced=11.0)
@interface SourceDescription (SWIFT_EXTENSION(THEOplayerSDK))
/// The ‘vr’ property can be used to configure VR video playback.
@property (nonatomic, strong) VRConfiguration * _Nullable vr SWIFT_DEPRECATED_OBJC("Swift property 'SourceDescription.vr' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end




/// A <code>THEOplayerAdDescription</code> object contains a description of an advertisement that will be added to the player.
SWIFT_CLASS("_TtC13THEOplayerSDK17THEOAdDescription")
@interface THEOAdDescription : NSObject
/// The ‘src’ property represents the source of the ad (VAST/VMAP). The player will download the content available at the URL and will schedule the specified advertisement(s). Currently, the THEO ad integration supports VAST and VMAP files.
@property (nonatomic, copy) NSURL * _Nonnull src;
/// Specifies when an ad should be played in the content video.
/// Currently supports the following values: ‘start’, ‘end’, and percentages (string, e.g. ‘10%’).
/// important:
/// Only use this property for VAST-files. THEOplayer will ignore this value for VMAP-files, because they already have their own offset.
@property (nonatomic, copy) NSString * _Nullable timeOffset;
/// Specifies when a linear ad can be skipped.
/// Value should be a percentage string, e.g. ‘10%’.
/// This value overwrites the value specified in the VAST-files, unless the skipOffset would be higher than the duration of the ad video (e.g. 110%).
@property (nonatomic, copy) NSString * _Nullable skipOffset;
/// Constructs a THEOAdDescription
/// \param src the source of the ad
///
/// \param timeOffset the optional time offset
///
/// \param skipOffset the optional skip offset
///
- (nonnull instancetype)initWithSrc:(NSString * _Nonnull)src timeOffset:(NSString * _Nullable)timeOffset skipOffset:(NSString * _Nullable)skipOffset OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP13THEOplayerSDK17THEOScriptMessage_")
@protocol THEOScriptMessage
@property (nonatomic, readonly) id _Nonnull body;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nullable parsedBodyString;
@property (nonatomic, readonly, copy) NSData * _Nullable parsedBodyData;
@end


SWIFT_PROTOCOL("_TtP13THEOplayerSDK24THEOScriptMessageHandler_")
@protocol THEOScriptMessageHandler
- (void)didReceiveWithMessage:(id <THEOScriptMessage> _Nonnull)message;
@end


/// A THEOplayerConfiguration object contains properties used to configure a THEOplayer
SWIFT_CLASS("_TtC13THEOplayerSDK23THEOplayerConfiguration")
@interface THEOplayerConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A TextTrackDescription object contains a description of a side-loaded text track that will be added to the player.
SWIFT_CLASS("_TtC13THEOplayerSDK20TextTrackDescription")
@interface TextTrackDescription : NSObject
/// Specifies a source URL where the text track can be downloaded from.
@property (nonatomic, copy) NSURL * _Nonnull src SWIFT_DEPRECATED_OBJC("Swift property 'TextTrackDescription.src' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Specifies the main language of the track.
@property (nonatomic, copy) NSString * _Nonnull srclang SWIFT_DEPRECATED_OBJC("Swift property 'TextTrackDescription.srclang' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Optionally specifies a label for the track which can be used to identify it.
@property (nonatomic, copy) NSString * _Nullable label SWIFT_DEPRECATED_OBJC("Swift property 'TextTrackDescription.label' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A range of time
SWIFT_CLASS("_TtC13THEOplayerSDK9TimeRange")
@interface TimeRange : NSObject
/// Start of the range
@property (nonatomic, readonly) double start;
/// End of the range
@property (nonatomic, readonly) double end;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




/// The <code>TypedSource</code> object provides the following properties:
SWIFT_CLASS("_TtC13THEOplayerSDK11TypedSource")
@interface TypedSource : NSObject
/// The ‘src’ property represents the source URL of the manifest or video file to be played.
@property (nonatomic, copy) NSURL * _Nonnull src;
/// Specifies the content type (MIME type) of source being played. <code>'application/x-mpegURL'</code> or <code>'application/vnd.apple.mpegurl'</code> indicates HLS, <code>'video/mp4'</code> indicates MP4.
@property (nonatomic, copy) NSString * _Nonnull type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end
















/// A VRConfiguration object contains the settings for 360 VR video playback. (ONLY USABLE ON IOS 11+)
SWIFT_CLASS("_TtC13THEOplayerSDK15VRConfiguration")
@interface VRConfiguration : NSObject
/// This attribute indicates whether 360 VR is enabled.
@property (nonatomic) BOOL vr360 SWIFT_DEPRECATED_OBJC("Swift property 'VRConfiguration.vr360' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




/// Configure Youbora analytics pre-integration
SWIFT_CLASS("_TtC13THEOplayerSDK14YouboraOptions")
@interface YouboraOptions : NSObject
/// Constructs a YouboraOptions object
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Constructs a YouboraOptions object
/// \param accountCode the Youbora accountCode
///
- (nonnull instancetype)initWithAccountCode:(NSString * _Nonnull)accountCode SWIFT_DEPRECATED_OBJC("Swift initializer 'YouboraOptions.init(accountCode:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Put a key value pair to the Youbora options where the value is a string
/// Example:
/// \code
/// youboraOptions.put(key: "username", value: "myUsername")
///
/// \endcode
- (void)putWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value SWIFT_DEPRECATED_OBJC("Swift method 'YouboraOptions.put(key:value:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Put a key value pair to the Youbora options where the value is a dictionary
- (void)putMapWithKey:(NSString * _Nonnull)key value:(NSDictionary<NSString *, NSString *> * _Nonnull)value SWIFT_DEPRECATED_OBJC("Swift method 'YouboraOptions.putMap(key:value:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.1 (swiftlang-1100.0.270.13 clang-1100.0.33.7)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="THEOplayerSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif




SWIFT_CLASS("_TtC13THEOplayerSDK24AgamaPlayerConfiguration")
@interface AgamaPlayerConfiguration : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull config SWIFT_DEPRECATED_OBJC("Swift property 'AgamaPlayerConfiguration.config' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nonnull application SWIFT_DEPRECATED_OBJC("Swift property 'AgamaPlayerConfiguration.application' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nonnull applicationVersion SWIFT_DEPRECATED_OBJC("Swift property 'AgamaPlayerConfiguration.applicationVersion' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nullable userAccountID SWIFT_DEPRECATED_OBJC("Swift property 'AgamaPlayerConfiguration.userAccountID' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Configure Agama analytics pre-integration
SWIFT_CLASS("_TtC13THEOplayerSDK24AgamaSourceConfiguration")
@interface AgamaSourceConfiguration : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull asset SWIFT_DEPRECATED_OBJC("Swift property 'AgamaSourceConfiguration.asset' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nullable cdn SWIFT_DEPRECATED_OBJC("Swift property 'AgamaSourceConfiguration.cdn' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nullable contentTitle SWIFT_DEPRECATED_OBJC("Swift property 'AgamaSourceConfiguration.contentTitle' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nullable contentType SWIFT_DEPRECATED_OBJC("Swift property 'AgamaSourceConfiguration.contentType' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nullable contentDescription SWIFT_DEPRECATED_OBJC("Swift property 'AgamaSourceConfiguration.contentDescription' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




/// A MetadataDescription consists of:
SWIFT_CLASS("_TtC13THEOplayerSDK19MetadataDescription")
@interface MetadataDescription : NSObject
/// A dictionary of metadata
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable metadataKeys SWIFT_DEPRECATED_OBJC("Swift property 'MetadataDescription.metadataKeys' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// The title of the content
@property (nonatomic, copy) NSString * _Nullable title SWIFT_DEPRECATED_OBJC("Swift property 'MetadataDescription.title' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Constructs a MetadataDescription
- (nonnull instancetype)initWithMetadataKeys:(NSDictionary<NSString *, id> * _Nullable)metadataKeys title:(NSString * _Nullable)title OBJC_DESIGNATED_INITIALIZER SWIFT_DEPRECATED_OBJC("Swift initializer 'MetadataDescription.init(metadataKeys:title:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class ChromecastMetadataImage;

/// A ChromecastMetadataDescription consists of:
SWIFT_CLASS("_TtC13THEOplayerSDK29ChromecastMetadataDescription")
@interface ChromecastMetadataDescription : MetadataDescription
/// The images property can either be an array of strings representing the image urls, or an array of ChromecastMetadataImages.
@property (nonatomic, copy) NSArray<ChromecastMetadataImage *> * _Nullable images SWIFT_DEPRECATED_OBJC("Swift property 'ChromecastMetadataDescription.images' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// The release date using the following string format: “YYYY-MM-DD”, e.g. “2017-03-14”
@property (nonatomic, copy) NSString * _Nullable releaseDate SWIFT_DEPRECATED_OBJC("Swift property 'ChromecastMetadataDescription.releaseDate' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// The subtitle / short explanation about the content
@property (nonatomic, copy) NSString * _Nullable subtitle SWIFT_DEPRECATED_OBJC("Swift property 'ChromecastMetadataDescription.subtitle' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)initWithMetadataKeys:(NSDictionary<NSString *, id> * _Nullable)metadataKeys title:(NSString * _Nullable)title SWIFT_UNAVAILABLE;
@end


/// A ChromecastMetaDataImage consists of:
SWIFT_CLASS("_TtC13THEOplayerSDK23ChromecastMetadataImage")
@interface ChromecastMetadataImage : NSObject
/// The URL to the metadata image
@property (nonatomic, copy) NSString * _Nonnull src SWIFT_DEPRECATED_OBJC("Swift property 'ChromecastMetadataImage.src' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// The width of the image
@property (nonatomic) NSInteger width SWIFT_DEPRECATED_OBJC("Swift property 'ChromecastMetadataImage.width' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// The height of the image
@property (nonatomic) NSInteger height SWIFT_DEPRECATED_OBJC("Swift property 'ChromecastMetadataImage.height' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Constructs a ChromecastMetadataImage
- (nonnull instancetype)initWithSrc:(NSString * _Nonnull)src width:(NSInteger)width height:(NSInteger)height OBJC_DESIGNATED_INITIALIZER SWIFT_DEPRECATED_OBJC("Swift initializer 'ChromecastMetadataImage.init(src:width:height:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class ConvivaContentMetadata;

SWIFT_CLASS("_TtC13THEOplayerSDK20ConvivaConfiguration")
@interface ConvivaConfiguration : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull customerKey SWIFT_DEPRECATED_OBJC("Swift property 'ConvivaConfiguration.customerKey' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nullable gatewayUrl SWIFT_DEPRECATED_OBJC("Swift property 'ConvivaConfiguration.gatewayUrl' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, strong) ConvivaContentMetadata * _Nonnull contentMetadata SWIFT_DEPRECATED_OBJC("Swift property 'ConvivaConfiguration.contentMetadata' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13THEOplayerSDK22ConvivaContentMetadata")
@interface ConvivaContentMetadata : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull assetName SWIFT_DEPRECATED_OBJC("Swift property 'ConvivaContentMetadata.assetName' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nullable defaultResource SWIFT_DEPRECATED_OBJC("Swift property 'ConvivaContentMetadata.defaultResource' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nullable applicationName SWIFT_DEPRECATED_OBJC("Swift property 'ConvivaContentMetadata.applicationName' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSString * _Nullable viewerId SWIFT_DEPRECATED_OBJC("Swift property 'ConvivaContentMetadata.viewerId' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable custom SWIFT_DEPRECATED_OBJC("Swift property 'ConvivaContentMetadata.custom' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Represents an <code>EventDispatcher</code> which will be responsible for dispatching an event, once it occurs.
SWIFT_CLASS("_TtC13THEOplayerSDK15EventDispatcher")
@interface EventDispatcher : NSObject
- (NSString * _Nonnull)getMinimizeFunction SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_OBJC("Swift method 'EventDispatcher.getMinimizeFunction()' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




/// Key system configuration
SWIFT_CLASS("_TtC13THEOplayerSDK22KeySystemConfiguration")
@interface KeySystemConfiguration : NSObject
/// Specifies the URL of the licensing server.
@property (nonatomic, copy) NSURL * _Nullable licenseAcquisitionURL SWIFT_DEPRECATED_OBJC("Swift property 'KeySystemConfiguration.licenseAcquisitionURL' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Specifies the URL of the FairPlay certificate server.
@property (nonatomic, copy) NSURL * _Nullable certificateURL SWIFT_DEPRECATED_OBJC("Swift property 'KeySystemConfiguration.certificateURL' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// Configure Moat analytics pre-integration
SWIFT_CLASS("_TtC13THEOplayerSDK11MoatOptions")
@interface MoatOptions : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Constructs a MoatOptions object
/// \param partnerCode the Moat partnerCode
///
/// \param locationServicesEnabled If ‘true’ then the SDK will attempt to use the device’s location services for more precise location data. Default = true
///
/// \param IDFACollectionEnabled If ‘true’ then the SDK will attempt to use the device’s IDFA for more precise user info. Default = true
///
/// \param debugLoggingEnabled If ‘true’ and a ‘MOAT_LOGGING’ environment variable is set in Xcode, then the SDK will log information to assist in the implementation and testing process. Default = false
///
- (nonnull instancetype)initWithPartnerCode:(NSString * _Nonnull)partnerCode locationServicesEnabled:(BOOL)locationServicesEnabled IDFACollectionEnabled:(BOOL)IDFACollectionEnabled debugLoggingEnabled:(BOOL)debugLoggingEnabled;
@end



@class SourceDescription;

/// Related Content Source object
SWIFT_CLASS("_TtC13THEOplayerSDK20RelatedContentSource")
@interface RelatedContentSource : NSObject
/// The duration property can be used to display a duration on the tile of the related content video.
@property (nonatomic, readonly, copy) NSString * _Nullable duration SWIFT_DEPRECATED_OBJC("Swift property 'RelatedContentSource.duration' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// The image property can be used to set the background image on the tile of the related content video.
@property (nonatomic, readonly, copy) NSString * _Nonnull image SWIFT_DEPRECATED_OBJC("Swift property 'RelatedContentSource.image' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// The link property can be used to specify a target URL to navigate to, when clicking the tile of the related content video. Specifying a link will redirect to a new page.
@property (nonatomic, readonly, copy) NSString * _Nullable link SWIFT_DEPRECATED_OBJC("Swift property 'RelatedContentSource.link' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// A source object specifying the source to play. Specifying a source will reset the player’s SourceDescription and allow the same player to play the new source without the need to redirect to a new page.
@property (nonatomic, readonly, strong) SourceDescription * _Nullable source SWIFT_DEPRECATED_OBJC("Swift property 'RelatedContentSource.source' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// The title property can be used to display a title on the tile of the related content video.
@property (nonatomic, readonly, copy) NSString * _Nullable title SWIFT_DEPRECATED_OBJC("Swift property 'RelatedContentSource.title' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Constructs a RelatedContentSource with link
/// \param image The image property can be used to set the background image on the tile of the related content video.
///
/// \param link The link property can be used to specify a target URL to navigate to, when clicking the tile of the related content video. Specifying a link will redirect to a new page.
///
/// \param duration The duration property can be used to display a duration on the tile of the related content video.
///
/// \param title The title property can be used to display a title on the tile of the related content video.
///
- (nonnull instancetype)initWithImage:(NSString * _Nonnull)image link:(NSString * _Nonnull)link duration:(NSString * _Nullable)duration title:(NSString * _Nullable)title;
/// Constructs a RelatedContentSource with SourceDescription
/// \param image The image property can be used to set the background image on the tile of the related content video.
///
/// \param source A source object specifying the source to play. Specifying a source will reset the player’s SourceDescription and allow the same player to play the new source without the need to redirect to a new page.
///
/// \param duration The duration property can be used to display a duration on the tile of the related content video.
///
/// \param title The title property can be used to display a title on the tile of the related content video.
///
- (nonnull instancetype)initWithImage:(NSString * _Nonnull)image source:(SourceDescription * _Nonnull)source duration:(NSString * _Nullable)duration title:(NSString * _Nullable)title;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class TypedSource;
@class TextTrackDescription;

/// The <code>SourceDescription</code> object is used to describe a configuration of a source for a THEOplayer instance.
SWIFT_CLASS("_TtC13THEOplayerSDK17SourceDescription")
@interface SourceDescription : NSObject
/// Represents the source of the media to be played.
@property (nonatomic, copy) NSArray<TypedSource *> * _Nonnull sources SWIFT_DEPRECATED_OBJC("Swift property 'SourceDescription.sources' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// The textTracks property can be used to add an array of side-loaded text tracks to the player. All valid tracks will be available for playback as long as the player’s source is not set again. Each text track should be described as a TextTrackDescription.
@property (nonatomic, copy) NSArray<TextTrackDescription *> * _Nullable textTracks SWIFT_DEPRECATED_OBJC("Swift property 'SourceDescription.textTracks' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// The poster property can be used to specify a content poster per source. The player’s content poster will be updated as soon as a new source with valid poster is set, or when the player’s own poster property is altered.
@property (nonatomic, copy) NSURL * _Nullable poster SWIFT_DEPRECATED_OBJC("Swift property 'SourceDescription.poster' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Metadata that can be used to describe content, e.g. when casting to chromecast.
@property (nonatomic, strong) MetadataDescription * _Nullable metadata SWIFT_DEPRECATED_OBJC("Swift property 'SourceDescription.metadata' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@class VRConfiguration;

SWIFT_AVAILABILITY(ios,introduced=11.0)
@interface SourceDescription (SWIFT_EXTENSION(THEOplayerSDK))
/// The ‘vr’ property can be used to configure VR video playback.
@property (nonatomic, strong) VRConfiguration * _Nullable vr SWIFT_DEPRECATED_OBJC("Swift property 'SourceDescription.vr' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end




/// A <code>THEOplayerAdDescription</code> object contains a description of an advertisement that will be added to the player.
SWIFT_CLASS("_TtC13THEOplayerSDK17THEOAdDescription")
@interface THEOAdDescription : NSObject
/// The ‘src’ property represents the source of the ad (VAST/VMAP). The player will download the content available at the URL and will schedule the specified advertisement(s). Currently, the THEO ad integration supports VAST and VMAP files.
@property (nonatomic, copy) NSURL * _Nonnull src;
/// Specifies when an ad should be played in the content video.
/// Currently supports the following values: ‘start’, ‘end’, and percentages (string, e.g. ‘10%’).
/// important:
/// Only use this property for VAST-files. THEOplayer will ignore this value for VMAP-files, because they already have their own offset.
@property (nonatomic, copy) NSString * _Nullable timeOffset;
/// Specifies when a linear ad can be skipped.
/// Value should be a percentage string, e.g. ‘10%’.
/// This value overwrites the value specified in the VAST-files, unless the skipOffset would be higher than the duration of the ad video (e.g. 110%).
@property (nonatomic, copy) NSString * _Nullable skipOffset;
/// Constructs a THEOAdDescription
/// \param src the source of the ad
///
/// \param timeOffset the optional time offset
///
/// \param skipOffset the optional skip offset
///
- (nonnull instancetype)initWithSrc:(NSString * _Nonnull)src timeOffset:(NSString * _Nullable)timeOffset skipOffset:(NSString * _Nullable)skipOffset OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP13THEOplayerSDK17THEOScriptMessage_")
@protocol THEOScriptMessage
@property (nonatomic, readonly) id _Nonnull body;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nullable parsedBodyString;
@property (nonatomic, readonly, copy) NSData * _Nullable parsedBodyData;
@end


SWIFT_PROTOCOL("_TtP13THEOplayerSDK24THEOScriptMessageHandler_")
@protocol THEOScriptMessageHandler
- (void)didReceiveWithMessage:(id <THEOScriptMessage> _Nonnull)message;
@end


/// A THEOplayerConfiguration object contains properties used to configure a THEOplayer
SWIFT_CLASS("_TtC13THEOplayerSDK23THEOplayerConfiguration")
@interface THEOplayerConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A TextTrackDescription object contains a description of a side-loaded text track that will be added to the player.
SWIFT_CLASS("_TtC13THEOplayerSDK20TextTrackDescription")
@interface TextTrackDescription : NSObject
/// Specifies a source URL where the text track can be downloaded from.
@property (nonatomic, copy) NSURL * _Nonnull src SWIFT_DEPRECATED_OBJC("Swift property 'TextTrackDescription.src' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Specifies the main language of the track.
@property (nonatomic, copy) NSString * _Nonnull srclang SWIFT_DEPRECATED_OBJC("Swift property 'TextTrackDescription.srclang' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Optionally specifies a label for the track which can be used to identify it.
@property (nonatomic, copy) NSString * _Nullable label SWIFT_DEPRECATED_OBJC("Swift property 'TextTrackDescription.label' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A range of time
SWIFT_CLASS("_TtC13THEOplayerSDK9TimeRange")
@interface TimeRange : NSObject
/// Start of the range
@property (nonatomic, readonly) double start;
/// End of the range
@property (nonatomic, readonly) double end;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




/// The <code>TypedSource</code> object provides the following properties:
SWIFT_CLASS("_TtC13THEOplayerSDK11TypedSource")
@interface TypedSource : NSObject
/// The ‘src’ property represents the source URL of the manifest or video file to be played.
@property (nonatomic, copy) NSURL * _Nonnull src;
/// Specifies the content type (MIME type) of source being played. <code>'application/x-mpegURL'</code> or <code>'application/vnd.apple.mpegurl'</code> indicates HLS, <code>'video/mp4'</code> indicates MP4.
@property (nonatomic, copy) NSString * _Nonnull type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end
















/// A VRConfiguration object contains the settings for 360 VR video playback. (ONLY USABLE ON IOS 11+)
SWIFT_CLASS("_TtC13THEOplayerSDK15VRConfiguration")
@interface VRConfiguration : NSObject
/// This attribute indicates whether 360 VR is enabled.
@property (nonatomic) BOOL vr360 SWIFT_DEPRECATED_OBJC("Swift property 'VRConfiguration.vr360' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




/// Configure Youbora analytics pre-integration
SWIFT_CLASS("_TtC13THEOplayerSDK14YouboraOptions")
@interface YouboraOptions : NSObject
/// Constructs a YouboraOptions object
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Constructs a YouboraOptions object
/// \param accountCode the Youbora accountCode
///
- (nonnull instancetype)initWithAccountCode:(NSString * _Nonnull)accountCode SWIFT_DEPRECATED_OBJC("Swift initializer 'YouboraOptions.init(accountCode:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Put a key value pair to the Youbora options where the value is a string
/// Example:
/// \code
/// youboraOptions.put(key: "username", value: "myUsername")
///
/// \endcode
- (void)putWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value SWIFT_DEPRECATED_OBJC("Swift method 'YouboraOptions.put(key:value:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
/// Put a key value pair to the Youbora options where the value is a dictionary
- (void)putMapWithKey:(NSString * _Nonnull)key value:(NSDictionary<NSString *, NSString *> * _Nonnull)value SWIFT_DEPRECATED_OBJC("Swift method 'YouboraOptions.putMap(key:value:)' uses '@objc' inference deprecated in Swift 4; add '@objc' to provide an Objective-C entrypoint");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#endif
